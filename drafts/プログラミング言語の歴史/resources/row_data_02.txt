【プログラミング言語の歴史】誕生から現代までのプログラミング言語の歴史を解説
https://www.youtube.com/watch?v=2p0VDBv1m1M

(00:00) どうもきです今日なんですけども プログラミング言語の歴史っていうところ でえ古代から現代に至る前の壮大なね プログラミング言語の歴史物語があるん ですよね当時の社会状況そしてそこに起き た技術確信そしてそれによって生まれてき たそれを支えてきたプログラミング言語で そのプログラミング言語を生み出すま多く の人々の情熱ドラマえこのね壮大な物語を 今日はねお話していければと思ってますで このねプロ画面言語を歴史知るってま すごく大事というか有効なんかいいことな んですよねめちゃくちゃねプロガ言語歴 面白いんですよ本当にね多くの人のね ドラマが詰まっていてでこのプロガ言語ね 知れば知る方ねだんだんとこう プログラミングのことがねとかその言語の ことがね好きになってくるんですよねで 好きになるとね今学んでるプログラミング がねより楽しくなりますしこの辺かね大変 なこととかあってもねなんちょっと愛しい 気持ちがね出てきたりとかまあとはねなん
(01:04) でこの言語とか最近流行ってるかとなんで この言語こういう機能なのかとかいうその 背景が分かるんでより今のね学習もね スムーズになっていったりとかしますでね 僕自身ねこのプラン言語の歴史ねま ものすごくま今回調べてみて面白かったん でそのね面白さをちょっとでもねこうお 届けしたいなとえそういう気持ちで今日は ねやっていきたいなと思っておりますで まずね最初ののねこうスタートはねこの 古代っていうところで大償経済の歴史と 初期の試みというところでね古代が193 年代までまずはねバーっとねま西暦ね 2500年前4500年前ですねから追っ ていきたいなと思っておりますでなんで こんな昔から始めるのかっていう話なん ですけどまプログラミングまもいそのコン ピューターってそもそも何かって言とま 計算機なんですよねあれてま演算をしてる わけなんですよってなった時に コンピューターとかプログラミングの歴史 を見ようと思ったらこの計算の歴史ま正確
(02:05) には計算をこう自動化していくま コンピューター計算自動化なんでその自動 化のえ歴史をね見ていく必要があって 紐解く必要があってそのところからねまず はねえ始まっていきたいなと思いますでね 1番ねこの物語のドラマのスタートはです ね古代っていうところで紀元前2500年 前本当にもう4500年前ですね今からえ そこでねメポ古代のメソポタミアで文化で ねアバカスっていうものが登場しますで 当時ねもう古代からま計算点怒られてたん ですよねこう商人がねえこのものとものを やり取りするからねえあいもういくらです とかねあと農こう農民がねえ今年はこれ だけのものが収穫できましたとかねえそれ 収穫量の計算とかね小取引とかで計算って 昔から使ってたんですよねでもねま当時の 系ですよまこうやってさんま日々やるけど もうんそんためにこう頭の中で考えるには も限界があるとうなんとかしてねこう目で も見ながらねえ計算できないかなていう
(03:09) ことでね生まれたのがこのアバカスま現代 でいうこうソバみたいなものですねこう いろんなねこう棒があってそこにこう なんか真っ赤の玉がついててそのね玉の数 とかでねえ計算していくっていうものが うまいましたこれはねもう当時ねますごい 画期的でまなんぜ今まで頭の中でしかやる ものがなかったのねこう目で見ながら資格 的ね数字を扱えるようになってちょっと 計算がね楽になっていくわけなんですよね でそっからねグイーンとま時代がさ動いて 紀元前え1世紀頃ですねえこれはですね アンティキティラでねまこういう機械が 見つかりましたこれ何かって言うと歯を 用いて天文のね現象をね予測をしていく 機会なんだったんですねまいわゆるこう 日食とかねそういうやつがいつ起こるかと かを計算するな機会が実はねもう歯持ちや 危険1世紀て昔めちゃくちゃ昔からねこう 機械式のね実はえ計算を行うものが誕生し ているんですねただまこれね アンティキティラ島っていう場所だけね 多分ねその辺り周辺でしか多分使われて
(04:19) なくてまだ世界中に広まるみたいなことは ねえなかったものにはなりますはいでまね 世界に広がっていくこの計算の自動化機械 が広まっていくみたいなところのま一番 こう歴史的なこう先駆けともねえちゃんと 言えるのはまブレイズパスカルっていうね え計算数学者がいてですね彼がパスカルの 計算機っていうものをね出すんですねこれ がねま画期的だったんですよねまあのこう やった歯車がついていてこの歯車を回す ことで多資産と引き算の計算をねえ自動的 に行えるようなものだったんですねでま さっきのアンティキテ党の機会ありました けどま基本的に多くの人々はあの計算って ねま17世紀になってもね主動で行ってた わけなんですよまあんなアンティキの機械 みたいな精密なねすごいハレベルの精密な 機会がねよに広まることはなくま基本は 主導で計算してる中でパスカルがねこう 歯車を使ってね達さ引き算ですけどま今週 は達さ引き算だけですけどもえそのそれを 自動発したっていうねま非常に革命的なえ
(05:27) ものが生まれましたとは言ってもねこのま パスカルもね計算機非常に複雑で効果だっ たんでこれがま世の中全部に広まるみたい なことはなかったんですけどねま非常に 時代の流れを象徴する発明ですねでそっ からね19世紀に入っていきますすると ねチャールズバベッジの解析期間っていう ねますごいどでかいねえ機会がね誕生して くるんですよでこれはねあのま最初のね コンピューターを何というかは非常にこう 議論が分かれるところで明確にこれが最初 のコンピューターですっていうこと言え ないんですけどもえそれのま最初の コンピューターともね言えるようなものが まこのチャールズバベッジの解析期間です ねはいあちなみに今回のねこの内容あのお 話ねなるべく本当に歴史的に正しいものを お伝えしたいなと思ってまファクト チェック事実が正しいかどうかをま色々と チェックしてあの自分で内容をね作り上げ ていったんですけどもえ多分ね不があると 思いますもうものすごい膨大な内容は使う んだね全部細かくはね把握しけれてない
(06:35) ところきっとあってま抜けているとか 正しくないとかてとこあると思うんでそう いうところあたちょっと温かい声でねえ コメント欄とか細くしながらねメントも 含めてねえこう内容がねしっかりと完成し ていくみたいな構成をでねちょっと一緒に やっていければとても嬉しいですはいでね ま諸説あるけども最初のコンピューターと の1つにねよく上げられることがあるのが チャーバッの解析ですこれ何が何がねあの 革命的だったかていうとプログラムを 組めるんですよまパンチカードドって言っ て紙にこう穴をこう開けたやつでねをまず 最初に用意しとくんですねでそうすること によってプログラムとデータを分けてこう 計算がえ行えるっていうものだったんです 要は今まで例えばねえパスカの機械とかっ て足し算と引算とか特定のものなんか用途 にしかできなかったんですけどえ立ち 引き算だけじゃて掛け算とか割り算とかね ででそれもねえプログラムを自由に組めて ま要は汎用的に使える機械式の
(07:36) え計算機が初めて汎用的な計算機が初めて 生まれたわけですねなのでこれはま コンピューターの原型と言われてるような ものですはいまあ多分ねバチ思ったん でしょうねま当時のきかものっていうのは ね全然もう1度機械組んだあそれでお しまいだと汎用的に計算なきないともっと 汎用的にできるようにしたいって思って これを作ったわけですよ でそっからねさらにね時代が住んで 1930年代20世紀ですねま第2次世界 大戦のね直前ですけどもここでねえ天才的 な数学者アランチューニングっていう人が ね出てきますで彼はまあのチューリングマ シーンっていうね機会を作るんですねで彼 何を考えてたかって言うとまこれ本当に ちょっと天才的ででこれすごい今の コンピューター影響与えてめちゃくちゃ 重大なものなんですけども彼はね計算とは 何かっていうのをまちょっと考えたわけ ですよでこの計算とは何かというまこの 計算の定義をするような行えるま理想的な ねこう仮想上のまモデルを作りたいって
(08:45) ことで作ったのがこのチューリングマシン になりますでそのチューリングマシーンを ねの作る中でねま1つね計算可能性って いう概念がねこのチリングマシンをじて出 てくるんですねこれ何かと言うとま何が 計算できて何が計算できないのかっていう ま計算の可能性もしくは限界をこう示す 概念が出てくるんですねでこのチリマシン と計算可能性とかのこの概念 ってこう計算をいかに行うかっていう ところでまいわゆるコンピューター先ほど ねえ計算のま演算装置だっっていう話をし たんですけどもえそのねコンピューターの 計算コンピューターが演算を行 その既存的な原理をね作ができたのがこの チリマシーンの計算可能性なんですよで これはね決してね抽象的な理論で終わらず にえこの理論を元に後々のね コンピューターが設計されていく本当に コンピューターのもう基本的なね設計をの ところに多大な影響を与えたのがねこの アランチューリングさんのチューリング マシンそして計算可能性というところに
(09:58) なってきますはいでまそんな形でねえ実は ねえまちょっとねこの後の賞でね プログラミング言語ねすぐ登場してくるん ですけどもこのプログラミング言語が登場 する前の時代っていうのはもう計算の自動 化の歴史だったでしたとそれはねもう古代 から始まりましたと紀元税2500年前の アバカスそしてパスカの計算機アベン解析 関してアランチューニングのねえ チューニングマシンといったような形で どんどんどんどんこう自動がね進んできた ま要はねもう人類はね最高の昔からね計算 いかに高率化して自動化するかっていう ところをね追求してきたっていうわけなん ですよでそんなねえ時代の中ま第2章と いうところで戦果の中から生まれた計算機 1940年代から1950年代っていう ところに話をね入っていきたいと思います え実はねここでよプログラミングが誕生し てくるんですけどもま現代の コンピューターが誕生すますでそれは第2 世界大戦の戦火の中その戦争という必要性 に迫られて生まれてきたものなんです
(11:11) ねでまずはねこの舞台を切り切るのはね コロサスっていうねえ機会になりますで これはねあの当時まトミーフラワーズって いうまイギリスの方イギリスのとの方です ねあのま第2世界大戦中にこれ発明された ものなんですけどもま連合軍イギリスとか アメリカとかとねまドイツとかがねとか 日本がこう若い戦ってたわけですよねで そういう中でまドイツをいかに倒すかって いうところででドイツがねまこうドイツ 軍内のやり取りを無線でこうやってるわけ なんですけどもそこのやり取りをねこう 暗号化してやり取りしてたわけですねで その暗号化がねまいくつか種類があるん ですけどそのうちの1つにローレンツ暗号 っていうもがありましたで当時ねまドイツ のねすごい機械使ってねめちゃくちゃ複に こう暗号化されてねでこれをか当時のね イギリスの人たちはねドイツに世界をせ 支配されるわけいかんとヒラが世界を支配 したらもうこの世の終りだとでドイツに勝
(12:15) たにはなんとかしてこのドイツがね次 どんな作戦を立ってるかっていうところの 暗号を解読してドイツの作戦をね把握せれ ばなら我々のこのドイツ暗号の解読が今後 の世界の行成を決めるっていうところね もう必死になってね暗号を解読していく わけですねでその暗号をね解読すべくえで それ高速にね暗号を解読しようっていう ところでついにマタまで世界初の電子計算 機コロッサスてやつなんですよねこのね コロッサスによってま高速にねドイツの 暗号をねえ解読することができるように なってそしてまあの式ってねあれなんです よね結構ちょっと計算速度が遅くてでそれ に対して今の計算機ってねコンピュー ターって全部ね電子式なんだわけなんです けどその電子がねついに生まれたという わけなんですねこれによってねまあの ドイツはねえ実はね暗号解読されてるん ですけどその暗をねイリスは解読して作戦 全部掴んでるんですけどもまドイツはその ことに気づいてなくてでこれがね戦争のね
(13:24) ま流れに大きな影響を与えていくという なりますはいでそういった形でね ついにようやく世界電子式のね計算式が 生まれるわけですよねで同時にねその時期 ま同じような時期にねこれもね戦時中から ね開発が進んででま戦後にねついに 1946年あたりかに誕生するんですけど エニアックっていうねえ世界初の汎用電子 計算機が誕生しますえこれはねジョン モクリとジョンプスパエカートっていうね 人が中心になってま開発していくわけなん ですけどもの方でねで当時ま戦争だったん でアメリカはねこう大砲とかねこう打つ わけですよね爆弾とかでその爆弾とか大砲 とかのね弾道があるじゃないですピュっと その弾道のね計算をまいかに高速に行うか ね例えば爆弾った時にどこにこう着陸して どこはどれだけ爆発すの被害をちゃんと 及ぼすのかというそういうねためにそれを ねなんとか高速でやりたいっていうことで えついに生えたのがね世界初の汎用子計算 機エアックですエニアックはねちょっと
(14:34) これ写真分かりますかねむちゃくちゃ でかいんですよなんか重さにすると約30 となったらしくてぱ超巨大なねまあの計算 機だったわけなんですけど も前のコロスとかまではねあのなんだろう な特定の用途に特化した電子計算機だった ですしかし このエニアックはねあのチャールズ バベッジのね解とかと同じようにね汎用的 にねいろんな計算をねえ自由に組み立てる ことができたっていうでしかもそれでも 電子式だっていうところでまめちゃくちゃ 画期的なものがエニアック生まれました このエニアックもま今で言うあの コンピューター最初のコンピューターの1 つとしてねよくあげられることがあるのが エヤですねまなんせ汎用的であり電子式な んでままさにコンピューターま最初 コンピューターと言ってもねまチャーズ バルスの開示期間とも言えますしこの エニアックもまその1つとも言ってもねえ いいようなものがねついに生まれるわけ ですはいでもこのエニアックによがねえ それからねまこれ今後ね科学技術計算の
(15:38) 分野とかねでさらにねこう使わ戦後ね使わ れていくような流れになっていきますま 非常にね戦争を通じてねま戦争の必要性に 応じてですけどついにねコンピューターが 生まれていくわけですねでこの コンピューターね当時はね あの機械後でねえ開発がされてたわけなん ですけどもま機械語ってコンピュターって 0か1かのねオンかオフかの電気電子信号 でねえ色々と判断していくんですね処理を 行っていきますでその電子信号0か1かの オンかオフかの信号の組み合わせによって ねいろんな計算っていうのをね行っていく んですけどもえそれで当時やってる中でま ここで登場するのねえグレースホッパーっ ていうこれねアメリカかな確かあのま海軍 のね少女の女性の方になりますはい海軍の 方ですねでま彼女持ったわけですよねま 当時こうやってま計算プログラミング計算 式に計算させるってまものすごくちょっと 繁雑で面倒だわ機械語なんてもう人が読む もんじゃないと英語に近い形でまるで英語
(16:45) を書かのように機会に命令できたらいいの にっていうことで考えて作ったのが コンパイラーていうものになりますコン パイラーって何かって言うと今の プログラミング言語って基本的にちょっと なんかこう英語チックなま英語っぽい感じ のこう行動を書いてね書くわけなんです けどそういった英語チックなものを書い たらそれをコンパイラーっていう機械に 通すんですねそうするとこのコンパイ ラーっていうのが期待が読み取ることが できる0か1かのま機械語って言われるま マシン用のコンピューター言語に変換して くれるとなので人はあの英語に近い形で プログラミングができる行動を書けばよく てそしてコンパイラーが変換して機械に 読み取れるものにしていくと機械後に変え ていくというようなための装置を コンパイラーですねでまこのコンパイラー の発明がねめちゃくちゃ画期的でねえそれ によってねこう多くの人がねその後こう 計算機コンピューターっていうのを使って いけることがねえできるとこに繋がって いくわけです
(17:50) ねでそういったねまコンパイラーを使って ま人が読みやすいえ形のね言語になって いくんですけどちゃめにそういった人がね こう自然に読みかけできるような現ポイ 言語のことを高水準言語って言うんです けどもその水人言語のねま走りが フォートランていうものになりますこれは ねまジョンバックス引きいるねIBMの チームが発明していくことになりますあで ちなみにねまちょっと今まで誕生登場した 人の名前とかあと今後登場する人の名前も なんですけどもえっとですね大体代表的な 人をねあの載せてますただえまその代表的 人ががその人1人がね大体そのプロ言語 発明したってことますごいそのケース 少なくて大体ね複数の人多くの人もしくは チームとかでねえ開発していっててでただ まここに書いてるのは代表的な人だけをえ 書いてくことが多いのでそれはちょっとね ご了承くださいはいでまねこのね当時ねま ジョンバックスたちは思ったわけですねえ 今のねこうプロイ言語も基本的にね数式と
(18:56) かねめちゃくちゃ扱いづととま我々はこう 科学技術の計算をねしていく中でま数式を 使うことがあるけどもま基本的には機械語 だし直接数式をかけないもっと数式をね 直接書けるようにしたいてことでねえー 作ったのがこのポトなんですなんでこれは ねすごいね数値をね直接的に記述ができる ようになってでそのことによってねこう 科学技術がよりねこう効率的にえ行うこと ができるようになったでこれがねもこれも ねこコンパイラーを用いたねえ高水準言語 のね1番走りの言語になりますはいここに 来てついにねコンパイラーが生まれて高 水準言語がね生まれてきたわけですねはい というわけでねこの1940年代から50 年代見てきたわけなんですけどまここはね 本当に戦争を通じてね初めてね えコンピューターが汎用の電子式計算機が ついに生まれたというわけですねでま トミーフラワーズかジョンモークえジョン プレスエカートえグレースホッパー ジョンバックジョンバックスみたいな人は ねこの汎用電子検査機作りそしてその後ね
(20:08) コンパイラー高水準言語っていうねところ でようやくついにプログラミング言語がね 誕生してきたわけでござい ますでねこうやってねついね プログラミング言語誕生してでこれがね第 3章1960年代なんですけどもこの高水 準言語は1960年代ねえ発展をしね商業 化を遂げていくことになりますまこのね 1960年代はですねまだまだ コンピューターも高い時代だったんです けどねえこの科学技術計算でより コンピューターを使いたいさらにはこう ビジネス分野でもこのコンピューターを 使っていきたいっていう流れがね大きい そしてそれに合わしてね高水準言語もね 発展していく形になりますまずね最初に 登場するのがねコボルですねはいこれはね これはね作ったらねまジョングレース ホッパーさんがねコルの母ってよく言われ てるんですけどまこのジョボまグレース ホッパーさんがねあの開発した コンパイラーが基盤になってできた プログラミング言語が小になりますでこれ はね当時ねまあ人々思ってたんですよね
(21:12) いやまこうフォートランとかねますごく いいけども基本的に科学技術系さ向けだと ま研究者向けだったんですよねまでもね あの まそれもいいかもしんないけどま我々は ビジネスマンだとだからもこのビジネス 分野で使いたい使いやすいま プログラミング言語が欲しいってことでえ こういった商業的にもね使いやすいものっ ていうコンセプトで作られたのがこの コボルまビジネスけ設計された言語ですね でおかげでねコボルはねむちゃくちゃね こうそう使いやすかった商業ペ広く利用さ れていくんですよねそれこそ例えばですね こうなんだろうな取引履歴をねえ計算し たいだとか在庫管理するとか出勤を管理 するまいろんなねそういったえこう商業 分野でよくあるようなねところのところで 使われてぶわっと使われていく商業分野に も常にプログラミングが入り込んでいくえ そういったところのね先駆けになったのが この小になっていき
(22:18) ますで同時にねまたね別の分野ではね アルゴルっていうねプログラミングもね すごいね普及しましたこれはですね当時ね 何があったかって言とまこの科学技術計算 やるわけなんですけどもま科学者た思った わけですま我々はね今フォートランとかで 科学技術計算やってるとましかしね フォートランまだまだねアルゴリズム何か 書こうってしたらねこう書きづらかったり するし何よりもねこコードが長くなって くるとねすごいごちゃごちゃしてくると うんでもです なんかでこれをなんとかねもうちょっとね ズを書きやすい形にしてさらにこう ブロック構造というものを入れてコードが ね読みかけしやすいようにしたいとで ブロック構造と何かま当時ねフォートラン とかコボルとかってまゴートゥ分っていう もの使ったんですけどこのゴト分っていう のはねあのむちゃくちゃ行動をね読み づらくするんですねでこのゴト分を消して そうではなくブロック構造って言ってま
(23:24) いわゆるこの例えば分ここちょっと見え ますかね分とこういうまイ分とかんです けどこう段落を作るやつですねこれ ブロック構造って言い ますこういった段落ができるようなものを 作ることによって行動よりねえ整理して本 科学技術計算とかねよりやりやすくし ようっていうことで作られたのがねこの アルゴルになりますこれねま世界的なねえ 国際的なこう研究地味が含まそこでねえ 作っていくんですけどもちなみにねえっと その国際的な研究チームにはねあの フォートラン作ってジョンバッカスとかも えいたりとかしますはいま1員にはねで このねアルゴルはねすごいねそのものプロ 言語に影響を与えていくんですけどもそれ はね構造化プログラミングの原型がこでき たんですよね構造化プログラミングって何 かって言と今の多くのねえプログラミング を支えてるものなんですけども言語されて ものなんですけど構造なんですけどねあの プログラミングて基本的にはね3つの構造
(24:21) でプロプログラミングを考えるんですね1 つがまあの逐次順次実行って順次構造って 言ってま上から順にね行動実行していき ますよっていうのもの上から下に向かって 実行していきますとでもう1つがえ分岐 構造って言ってまいわゆるイ分ですねど こういうケースだったらえもしこうだっ たらこういう処理をしてくださいって分岐 をするような構造でもう1個が反復構造え この数の分だけ同じ処理を繰り返して くださいねてこの順次構造をは分岐構造を 反復構造っていう3つのね構造を使って プログラミングをしていくっていうのがま 現代のプ多くのプログラミング言語のま 基本とには骨格なんですけどその構造化 プログラミング原型がねできたのがこの アルゴルの役割になり ますでさらにはねリスプっていうねあの 言語も登場するんですねこの時代えこれは ねジョンマッカーシーっていう人たちが 中心になって作っていきますで彼は思った わけですねジョマカああまフォートランと かコボルとかはねまそれぞれ科学技術計算
(25:31) とかま商業分野には確かにいいかもしれ ないしかし我々は人工知能の研究をして いるえま彼であちなみにこの時代もね人工 知能の研究って何回かブームがすごい 大きなブームがあったんですけど実はね この昔からねこんな時代から人工知能AI の研究ってすごい盛にされてたんですよね でそういう中でねま彼ら人工知能の研究者 AI研究者だったわけなんですけどもま この人工知能分野にとの計算とかね なかなかしづらいとまいろんな制約がある とこの我々人工知能分野の計算科学者たち が何の制約もなくねもっと自由にね人工 知能の開発をできるようなプログラミング 言語が欲しいでそのためはまずデータの 構造を基本リスト構造としてもとでリスト 構造で持つと最近の処理というのがとても やりやすくなるこれによってAIの アルゴリズムのね開発がよりやり好なだろ うって言ってまあの作ったのこのリスプな んですねでこのリスプはねまいろんなね 影響ね構成に与えていくんですけどもえー このね関数が特に大きいのはねこの関数型
(26:42) プログラミング言語っていうまそういう 関数型っていうパラダイムがあってですね それをね作り上げたのがねこのリスプさん になりますでこれ今もね現代に思いてこの 関数型っていう概念はねむちゃくちゃねえ 引き継がれているとか多くの言語にえ響 与えてます はいまそういった形でですね1960年代 見てきたわけなんですけどもこうやってね 誕生したね高水準1950年代にね誕生し た高水準言語がビジネス分野とか科学技術 計算分野とか人工地の計算分野とか各用 とごにに高水準言語が発展していったのが ねこの1960年代ですでそれをですねま グレイブホッパーさんのねコンパイラー基 なてコルができたりとかえジョン マッカーシーがねこのリスポを作ったりと かいう形でねそういった人々のこう努力に よってねこの高水準言語が発展していった わけ ですでこのね高水準言語の発展を基盤とし て次いてね1970年代に続いていきます よここではねシステムプログラミングと
(27:44) オブジェクト思考っていうものがね発展し ていく形になりますえシステム プログラミングて何かって言うとまOSと かあとはこうデバイスドライバーとかま あとね今出てきたやつコンパイラーとか そういった何ですかねアプリケーションが ね動くための土台となるようなシステムの 部分をえ開発するのをねシステム プログラミングと言いますこの時代ねその システムプログラミングが発展していくん ですけどもそれは果たしてなんでなのかえ その背景からね見ていきたいんですけども はいここでねあのお知らせがございます私 がね運営する株式会社ユルでは アプレンティスという内定直結型の エンジー実習サービスを運営しております 学費完全無料給与をもらいながらスキルを 見つけることができるえ実習サービスと なっておりますこういったねえ プログラミングがねえすごい好きでねま 魅力的に感じていてこの世界で生きていき たいという方え下の概要欄にねえリンク
(28:44) 載せておりますので是非覗いて一緒にね チャレンジしていけたらとても嬉しいです ではねちょっと続き行きたいんですけども まちょっとね1960年代のまそもそも 時代背景としてUNIXっていうねOSね ま発明されて普及していったってのがねえ すごく多1960年代じゃないな70年代 だ失礼します1970年代ですねまですね そのベースとしてあの背景したユニッが 発展していくってのがありますこれ ユニックスはAT&Tっていうところをね ベル研究所っていうところがあってまそこ がね発明したososなんですけどま思っ たわけですねま当時のこうま当時てとか 思わないと思うですけどまOSはね めちゃくちゃ大ま複雑で柔軟性かけてたと なんかすごい多能なんだかけどこの多能を 作るためにめっちゃこう作り込んであると そって全然柔軟性がないもっとシンプルな 形にしてシンプルなものとシンプルなもの を組み合わせることでこういろんなことが できるようなそんな柔軟なものを作ろうっ
(29:48) て言ってできたのがこのユックですねはい なんで非常にシンプルで柔軟でまいろんな 人がねこうしかも手を入れてねえ機能を 拡張することがね可能だったんですねえ そういった形になったのでまこのねUNっ ていうのをベースにしてUNはこう普及し ていく中でじゃあほもっとねこのUNIX とかもしくはシステムプログラミングて 言われてるものですねをもっとねえ柔軟に できやすくなったかやっていこうみたいな ことでシステムプログラミングで アプリケーション動く土台のところが すごい強化されていくんです ねでそういう中に登場したのがえこ有名な ねC言語ですね これはねデニスリッチーさんていう人がね 開発していくんですけどもま彼もあの UNIXの開発に関わってたんですねで 思ったんですよまUNIX今アセンブリ 言語で開発してるとまアセンブリ言語って まあの機械語に近いですねまほぼ機械語 みたいな機械を実装するためのねえ言語が アセンブリー言語になりますでま アセンブリー言語だとどうしてもま
(30:52) いわゆる機械語だとどうしてもね コンピューターのこのアーキテクチャーと かまプラットみたいならるとあの毎回違う 実装をしないといけなくなる コンピューターのねこう動く原理が違うと ねえどうしても移植ができないも1つ行動 を書いてもねコンピューターの種類ごとに またなんか行動書き直さないといけないと それはもうものすごくめんど くさいなのでま1つ行動を書いてもそれで 済むようにし たいかといってまあねこういったあとは フォートランみたいなこう水準言語とかだ と汎用的にあなんだろこのシステム プログラミングとかOSの開発みたいなの をやりやすいわけでもない移植性も高くて それでいながらこの低レイヤーのOS みたいなシステムプログラミングみたいな のを効率的にできるま言語が欲しいって いうことで作ったのがこのC言語になり ますまいわゆるねこうアブリのね アセンブリ言語のまこの強力さ柔軟性とま
(32:01) 高水準言語の書きやすさみたいなところを ね兼ね備えた言語として登場者のC言語な んですねでまそのC言語れることによって UNとかはねC言語でその後ね開発して いってねま非常にユッの実装もより楽に なっていきますしま本当にシステム プログラミンググってのがC言語どんどん さえていってまいろんなものがねこう作ら れて いくことになっていきますでこのC めちゃくちゃねもう本当にすごい作り やすくなったので強烈でありながら作り やすいのでこれによってシテプラインが 広がっていってでめちゃくちゃ使われて いくんでねプログラミング言語の基礎とね C言語はねその後ねなっていくような普及 の仕方をしていき ますで同時にねこの時代ねそういった形で まシステムプログラミングとか普及して いってコドの規模が大規模になっていった んですねでそういう中でま行動規模がね こうどんどんどんどん大規模になっていく とま複雑になっていくわけです行動がねで
(33:02) ま今までの言語ね手続き型って言うんです けどもまいわゆるこう構造化 プログラミングで上から下に自に普通に 行動書いていくみたいな手続き方の言語 って言うんですけども手続き方の言語だと ねもう限界きたですよも行動がカスになっ てしまうとでそれをなんとかしたいって 思った方々がう行動なんとか整理頓したい とはじゃどうやって整理頓したいいかうん オブジェクトっていう単位で整理正当に しようオブジェクトとはこう物とかね概念 みたいなものだと例えば我々日常でものを 考えてきAさんが何々した学校に行くみ などこう物とかいうものをね守護をこう 基盤にして守護がどうしたみたいな感じ 守護を基盤にして考えるとなので オブジェクト物や概念っていうものを ベースに行動でそこを中心として行動整理 正当していったらいいんじゃないかって いうのに生まれたのがこのオブジェクト 思考ですねでそのね先書きとなったのが このシミラっていう言語になりますまこれ がね本当にオブジェクトせ整頓していくっ ていうところの言語でとして誕生したのが
(34:08) シミだっていう言語ですねであのちょっと 補足なんですけども当時はねオブジェクト シミラーの時誕生しシミが最初ね オブジェクト思考を作ったオブジェクト 思考の法がとなるわけなんですけどもえ このシミの時代はねまだねオブジェクト 思考っていう言葉なかったんですよでそれ を作ったのがねまアランKっていうがいて このつまた出てきますけどアランKって いう人がこのオブジェクト思考っていう この概念を広めたくてオブジェクト思考 っていう概念をね使用していく形になって いき ますはいでねえ今登場したアランKさんな んですけどま彼はねえ思彼はねスモール トークっていう言語を開発していきますで 彼はねまその当時の言語は ねまどうしてもねえこういった感で行動が になっていくと今の言語だとこれはいかん なんとか整理整頓したいではこの オブジェクト思考を使って事を オブジェクトというものを中心してこの オブジェクトがメッセージを送信して他の
(35:11) オブジェクトとやり取りするこういう形を 作ろう英語は守護SVと守護同士だとはい このSオブジェクトがV動作をするこう メッセージを送るっていう形でやり取り するような形にすればえすごくいいんじゃ ないかでさらにね えこうインタラクティブな性をね増し ながらえコンパイルも素早くできて インタラク性増しながらそguiでねえ グラフィックがこう見た目でねこう グラフィック見ながら開発できるような ものをしようっていったことでできたのが このスモールトークっていう言語になり ますでこのスモールトークはね むちゃくちゃそねあのそれこそねC プラプラとか例えばあとJAVとかねそう いったいろんな言語まオブジェクト思考型 の言語はたくさんあるんですけどもそのま オブジェクト思考型オブジェクト思考のね 標準となっていくのがねこのスモール トークでありまし たというわけでねこの1970年代はです ねまUNIXの登場背景としてシステム
(36:10) プログラミングがめちゃくちゃ進んでいき ますでデスリッチさんがねあのまC言語 作ったりとかしてシテプロイを本当に 花開いていきそしてアランKがねあの スモールトーク作ってオブジェクト思考 っていう概念を広めていったりとかしてえ こういったオブジェクト思考が誕生したの がねこの1970年代になり ますでそういった形でねま結構ね プログラミングの世界がねま非常に整って きたから作り上げられて現代に近い形でま もうま現代も現代めちゃくちゃ使れてます けどC言語もオブジェクト試行 めちゃくちゃ使れてま現代のプロライン 言語がねできてくる中で1980年代には ねこの時代にねパーソナルコンピューター が普及していくんですよでまこのパーソン コンピューターの普及がねえめちゃくちゃ 多くのあのプログラム言語にもすごい影響 を及ぼします要今までのコンピューターっ てま企業が持ってたですよめちゃくちゃ 効果でかかったんでま企業だけが持ってた んですけどもそれがま1人1家に1台
(37:10) みたいな形でえ個人の自宅にも届くよう なってきた時代ですねでそうちねパス コンピューターが普及すると例えば中で こうワドソフトみたいなとかワプロソフト みたいなとかそういったのをこう作る必要 があってま今までの例えばこう在庫管理 みたいなとか取引利益のねえ記録みたいな ものからねよりこうguiが必要だったり とかまこのグラフィックの見た目が必要 だったりとかねいちょっと複雑なものとか がねこう必要になっていくんですねでそう いう中でさらにプログラミング言語をね 発展を閉じながらねさらに言語の標準化 っていうのも行われていきますさてどんな ことが起きたらのでしょう かでまずここで登場するのがビーネスロブ ストロプっていう人になり ます彼はですねCプラプラスっていう言語 を登場しますでまあ何を思ったかって言う とねまC言語はねま非常に強力だとしかし どうしてもこの現代においてパサ コンピューター復旧してきた中において
(38:20) まあなかなかね行動の量とか増えてくと 行動がカオスになってしまうとでそれをね うまく整理してくれるのはスモール のオブジェクト思考とかなんだけどもま オブジェクト思考だけどもこのオブジェ スモールトークとかはねまだ パフォーマンスがじゃあ今度いいかって いうとそんな良くないと強力C言語のよう な強力差はないとC言語の強力差C言語に オブジェクト思考を取り込むことでこの2 つの良さを両方兼ね合わせた言語を作ろ うって言ってできたのがC++になります C++はCゲームはねオブジェクト出行の 要素を取り入れたものにでしてでこれに よってねあれなんですよねまC言語なんで システムプログラミングは引き続き強くて 加えてこうやったパーソナル コンピューターとかに使っていくような アプリケーションの開発にも適したものに なってこうやってCむちゃくちゃね幅広い 分野で使われていく大福するんですね はいで同時にねこの同じほぼもほぼ同じ時 ですねほぼ同じ時にできたのがね
(39:23) オブジェクティブCっていうね言語になり ますこれはねブラッドコックスっていう人 が作ったわけですねまブラッドコックスも 同じようなこと思ってたわけですよえまね そのあのC言語強いけどねどうしても コードカオスになりやすいからまスモール トークのメッセージ機能をね言えたものを 作ろうってことでC元にスモールトーク メッセージ機能を追加したのが オブジェクティブCになります はいでまこのオブジェクティブCはね非常 にこうguiとまスモールトーク自体はね 結構guiが強い言語だったまあって オブジェクティブCもねえguiがすごい 強くてまいわゆるこの画面見ながらね画面 上でいろんな開発がしてきるみたいな ところになってですねまそういったのが 強かったのもあって後にねこれはですね 多分1990年代からにAppleの えっとマキトッシまいAppleの今で いうMacですねのあのそのパソコンの方 のアプリケーションの開発の方の公式な 言語としてえ採用されていくところに
(40:18) 繋がっていき ますでこっった形にCプラプラが生まれ たりとかオブジェクティブCが生まれたり とかする中でえちょっと問題になってたの がねねまこの時代に行れたのがアンシーっ ていうまアメリカンナショナル スタンダーズインスティチュートていう 機関があってそこがねC言語の表準化って のをやるんですねあの何が問題になってた かって言うとえあのコンパイラーごとにね とかねごとに当時ね実装が異なってい たってのがあってC言語に関してねえC 言語ってまいろんなコンパイラーがある わけですよまいろんなコンピューター アーキテクチャっていろんなそれぞれこと コンパイラーがあってでこのコンパイラー の実装が違うから同じC言語のま1つつの コード書いてもこのコンパイラーの種類に よってなんかC言語の動作が違ったりして たんですねでそこが統一できてなかった からなんか異なるアーキテクチャにあのと か異なるコンパイラー向けにねCゲーム
(41:13) 書いたらそれそういうことでま書き直さ ないといけないみたいな事態が起こってて もめっちゃめんどくさいとでそれでまもう C言語でC言語ってこうコンパイラーとか 含めてねこういうものですよってこれがね の企画ですよってものを統一して標準化し たんですねでそのことによってねま資源語 書いたらまどの場所でもねちゃんと安定し て動くみたいな形になってより安定してね 安心してC元号をね使えるようなところに 色々にね繋がっていきますでこれからさね C++とかね普及のさらに後押しにもなっ ていくっていうはいところですねはいって いうのがね1980年代に起こったことに なりますま要は1980年代はですねえ システムプログラミングみたいな1970 年代ねえC言語とかによってバーっと普及 してましたみたいなオブジェクトCもあ オブジェクト思考みたいなのできてコード も整理整頓できますようになりました みたいなだからまアプリケーションをね システムプログラミングてが整ったんで
(42:12) アプリケーションすごい作りやすい状態で アプリケーションで複雑も作ったって オブジェクトオブジェクト思考で整理でき やすい状態ができててそういう中でね パーナコンピューターが生まれてでその子 によってねまいろんなアプリケーション 作るて複雑なものを作るってなったけども こうより効率的で柔軟な言語を作っていこ うってことでまビアレストブスロップが まあCプラプラ作ったりとかねブラッド コックスがねオブジェクティブCを作っ たりとかして対応していってそしてね アプリケーション解説がぶわっと花開いて いったわけですねでま同時にねそういう中 でC言語もねプラットフォームごとにコパ ごとに実は異なっていたみたいな問題も あったのでえそこの言語の標準化っていう のも行われることでより安心して皆が使い やすくなっていったえそんなのが1980 年代ですでまそういった形で コンピューター普及していったんですけど もこの1990年代はね激動ですねこれ
(43:09) 何か何が起きたかっていうと インターネットが誕生したわけなんですよ まインターネットが誕生してね世界中の 人々が瞬時にね場所を超えてね情報のやり 取りってのはね情報の共有ができるように なったわけですねでこの今インターネット によってまたこれもね大きく プログラミング言語に影響を与えていき ますまスクリプト言語っていうのがね特に ね対当してくることになるんですけども 果たしてインターネットはどんな影響を このねプロア言語に与えていったの でしょうかそれを紐解いていき ましょうまずね登場するのがJAVですね はい今日本でもね1番使えてるま言語商業 的に1番使えてるのJAVじゃないかなと 思いますはいでこのジャはねジェームズね ゴズリンクっていうは中心となってね作っ てきますでま当時ね思ったわけですねあー みたいなまいろんな言語はね出てきていい けどもどうしてもこのコンピューター アーキテクチャーとかだとあ例えばOSが 違ったりとかするとあの実装を変えないと
(44:16) いけないとOSごとにね挙動が違うと他の 今までのC言語とかねシープラプラとか それはもうちょっとめんどくさいなとスが 違ってもね1度書いたらもどこでも動く ようにしたいじゃないかっていうことでえ 作ったのってことでま1度書けばねどこで も動くっていうコンセプトで作られたのが jaabなんですねでjaabはね本当に そのコンセプト通りに作ったのでまあ一応 作ったらどこへも動てくでねどこでも動作 したんでね本当に幅広い分野で使われて くるんですねまそれこそ企業さん向けのね 期間システムみたいなところでもめっちゃ 使われますしまた家電の中とかでも使われ ていきますしさしてこの線90年代 インターネットが登場してくると今度 インターネットのこのウブ アプリケーション作るところさらにこう ガラ系とか登場してきたらねそういった ガケまそれから時代はサイ先に行きます けどま例スマホみたいなとこができてる時 にはねそういったモバイルのアプリとかに
(45:13) もスマホアプリとかを作る時にもこの JAV使われるみたいな感じでもう めっちゃ幅広いVI使われてめちゃくちゃ 普及していくのがねこのjaabになり ます はいでまた同時にねこうJAプトっていう のができるわけなんですよねこれはねもう ブレンダーアイクっていうま天才的なねえ 人がいてこの人が作ったのがね JavaScriptになり ますでまあ当時ねま思ったわけです ねあのま今ねこうインターネットが普及し てきてウェブページ作れるよなしかし ウェブページはHTMLとCSSだけで 非常に性的なものだと動きがない何かこう ウェブページはこう動いたりとかね もしくはこうユーザーが何かアクションを したらマウス動ホバーするとかねこうっ アクションしたらその動きに合わして インタラクティブにね同的に動くような ものにしてそういったリッチな表現が できるようにしたいってことで作ったのが ねえJavaScriptになりますま JavaScriptはねそういったかま
(46:15) ブラウザ上でね動作するプログラム言語で ウェブページに同時機能をね追加すること ができたんです ねでこれはですねちなみに javascripJAVパではね 基本的にコンパイラー言語って言ってあの 言語をね1回コード書いたらコンパイラー を通して機械後に翻訳してから実行するっ ていう1回コンパイルっていう作業が必要 な言語だったんですねですがこの Javascriptとかからあたりかね スクリプト言語っていうのがどんどん どんどんたくさん登場してくるようになり ますこれはですねま あのこのコンパイルっていう作業を通さ ないんですね1回コード書いたらもうそれ を読み込んでしまいますとコンピューター そしたらそのコンピューター読み込んで からそこの中で機械後に変換しながらやっ ていくと1回わざわざ主動でコンパイル するっていう作業が必要なくなったのが スクリプト言語っていうなりますもうね あのこのインターネットの時代ねすごいま
(47:12) 急速にねインターネット普及してその急速 な心配をしてサクサクとね開発して サクサクとリリースしてやっていくみたい な必要になったんでもうバレで時間かけ てるのももったいないというところで そんな時間もねはって高速に開発できる するためにね登場者のこのスクリプト言語 っていうものたちになっていきますはい JavaScriptはそのスクリプト 言語ですねでまこのJavaScript によってねこ本当にインタラクな体験 リッチなね体験っていうのがついにWeb でもねできるようになっていくわけです はい同時にねあのこれがねもこう画面の見 た目の話なんですけどインターネットの 普及によってこうサーバーサイドの言語 っていうのもどんどんどんどん誕生して いきますえ代表的ながpxpですねえこれ がねラマスダウフっていう人がね作った ものになりますま最初ね彼はね実はこれ 原稿作ってなかったんですよ彼はま個人的 なねページホームページ持っててそこの ホームページに来た人のアクセスを利益を
(48:10) ね追跡したいってことでアクセス益の ツールを作ってたんですねでそのツールに 対してさまいろんな要望が出てきて例えば こういうケースの時はこういう風な処理を してみたいみたいなこれ条件分岐のとこと かもできてそういった機能を追加していく とあれみたいなこれもはやプログラミング 言語じゃねってなってそっから生まれたの がねまPHPになりますでPHPはだから ねあのますごい ね実用的まツールからえてるぐらいね すごい実用性が高くてですねでこうウェブ ページを作るっていう時になんだろうな同 的なウブページ作る必要あったわけですね HMとかCSとかっていつもね見た目が 固定してるわけなんですけど例えばこう ユーザーごとにね内容を出したりとか ユーザーが何か検索の例え検索フに何か 入力したらまた内容コンテンツの内容出し 分けるみたいな中身を同的に変えていく ことが必要ででPHPはこうHTMLの中 にPHPの行動を埋め込むことによって データベースとの連携をしながらね同的 ページをねえ簡単に作るみたいなところが
(49:16) すごい得意な言語なんですねでこれも スクリプト言語でございますでそのおかげ もあってねPHPをベースにしてそれこそ 例えばこうブログがすごい生まれたりとか まWordPressっていうものがあっ てそれはPHPでできてんですけどその PHPからWordPressって WordPress経由で最にブログが たくさん使えたりとかとECサイトが めちゃくちゃ作られたりとかいう形で いろんなウブアプリケーションがPHPが 出ることによってねすごい作りやすかって 作られていきます はいさらにねこの時代登場したのはねえ 注目アプしPythonですね Pythonはねグイドバンロッサムって いう人が作るんですけどもま彼は思った わけですねまあいろんな言語が登場した けどねどの言語も難しいよともっとね シンプルで読みやすいプライ言語あっても いいんじゃないかっていうことでねこ シンプルで読みやすい公文をね大事にして 作られたのがこのパイソンになりますこの パイソンもねえサクサク作れるま スクリプト言語です
(50:15) ねで同時にねこのねまpyonがこう できることによってこう今までねそんな プログラミングが得意じゃなかったこう 研究者の人たちとかえ学生さんとかねそう いった人たちもこうどんどんどんどんあ pyonだったらね全然分かるなって できるなって言ってまどんどんpyonを ね使っていくだから要はねプログラミング の式位置を下げてねプログラミング めっちゃこう身近なものにしていったのが ねこのPythonでありましたはいと いうわけでねこの1990年代はですねま インターネットが登場してぶわっとこう インターネットが広まる中で多くの インターネットのコンテンツページをね サイトを作りたいみたいなニーズ出てきて それ中でま高速にねより手柄にサクサクと 作れるみたいなものが求められて スクリプト言語ってのは対当していきます えジェームズゴツリンクはねえJAVを 使ってどこでも動くようなものを作ったり とかまブレンダーアクがね あのJAVスクリプト作ってウェブページ
(51:15) に動きをもたしラマスダフがねPHP作っ てえウェブページを同なページをね サクサク作れるようにそしてグリード バロスソムがねpyon作って誰でもね もうシンプルで読みすえ誰もが使いやすい ねプラ言語を作っていくえそういう形でね スクリプト言語はどんどんどんどんまJA はちょっとねあのコンパラ言語ですけど 対当していったところになりますはいなん でまこうこういった言語はできることに よってねwebサービスのね基盤が気遣え ていくわけですよねWebがこう インターネットが普及していく中でこう いったプロゲーをできることでよりね インターネットのこのコンテンツサイトっ ていうのがね再にできていく形になって いき ますはいそういったねインターネットがね ま2000年代にも次第所2000年代な んですけどまあまさ普及していく中でここ でね外せない動きがオープンソース運動 っていうものなんですねはいオープンソー スって何かって言うとあのこう
(52:10) ソフトウェア自分が作ったソフトウエアを ねえ無料で世界中に公開しますとで無償で 誰も使えるようにしてします同時にね何か こう機能追加したいとかなったら誰でもね こその機能の追加を提案することができ るってでこうコミでねえみんなに協力し ながら作っていきましょう1つの アプリケーション作っていきましょうソト 作っていきましょうっていうのがま オープンソース運動になりますこの オープンソースウドがね2000年代に むちゃくちゃねものなんだろうな文化とし て寝付いていくんですねさて何が起こった のかえまずねこのオープンソースを語に 書かせないのがリナックスですねまこれ リナストーバズって人がねこうなんだろう なもっと自由だねOSを作りたいっていう ことでねえlinxていうOSを作ります でまあのリナックス自体はね1991年に 登場してるんですけどもま最初にリアス オーバーズのなんだ個人的なプロジェクト がスタートしてるんですけどもそっから こうまオープンソースにま解放した解放し
(53:10) たですね誰でも使えるし誰でも昨日追加 できるよっていう形にしたんですよでその 結果ねもま今前のこうososかに不満を 持ってた人はねこうlinxの3開発で ジョインして色んな人からいろんな機能を 付け加えながらこうどんどんでっかい コミュニティにないくんですねでそして 2000年代もそのコミュニティが拡大し たながリナック自体もどんどんどんどん 進歩を閉じていき ますでこのリナックスがねあのまいわゆる こうオープンソース運動の走りでもあり こうオープンソース運動の象徴的なものな んですねまLinuxますごい良い機能 よいすごい柔軟性も高くてねすごい使い やすくたたもあってまめちゃくちゃ多く 使えてくるですいろんなサーバーに使われ たりとかねこういろんな分野ですごい宇宙 開発とか含めてねすごいたくさんの分野で ねま商業分野も含めてリナックスは使れて いくんです使われてきますとでただそれ だけじゃなくてリナックスはねオープン
(54:05) ソース誰かがおもっとこんな機能作りたい なって思ったらはいそれ大丈夫はいじゃあ 作っていいよっていう形でねえいろんな人 が協力しながもう世界中の人々がねこう リナックスの開発をしていってぐおと そして世界に広がっていくっていうすごい OSを作り上げたのがそういったねオプ 運動の象徴としてリラックスっていうのは あります はいでまこのオープンソース運動ねこの 2000年代ねあの特に伸びていったもの ま代表的なものがねアパッチですねはい アパッチはねウブサーバーのソフトウェア になりますあの何をするもんかって言と ウェブサイトのホスティングですねこう ウェブサイトを何かこうリリースしてま 人々がねこうなんかウブページアクセスし た時にHCSとかとかをこう返して コンテンツを返してねえこうサイトが表示 されるようにしたいっていうえそういった サイトを表示させる機能になっていうのが このアパッチになりますアパッチもね オープンソスでねこう作られていてですね
(55:08) あの多分登場作られたのは多分1990年 代なんですけどま2000年代ねめっちゃ 広まっていってですねまいろんな人はね こうもっとこうした方がいいともっと パフォーマンスを上げたいからこういう風 にしよう今の案セキュリティ上危ないから こうしようみたいな感じでどんどん どんどんオープンソースで開発していくと いうってアパッチもすごい高機能でね高 性能高安全なってねめちゃくちゃねこう ウェブサーバーとして使われていくものに なっていきますはいまこれがまさらに インターネットのコンテンツの復旧を助け たりするわけなんですけども同時にねこう ぜひ伝えてきたギットですねえこれね リーナストーバルズがねこれあのさっきの リナックス作ったリーナストーバルズがね え作っていくんですけどもま彼ね リナックス作る中でまあのなんだろうなま こうやっ世界中の人々とか協力して作ると しかしそん時にみんなでこう行動ま バージョンをねコードのバージョンを管理
(56:06) していたいんだけどもまそういってツル あるけどまリラックスにとって本当に使い やすいやつがないんだよなうんよしないな 作ろうって言ってね作ったのがこのギット になりますえギットのおかげでねこう オープンソースとかで複数人がこう分散し ながらそれぞれ手元へねえ分散しなが作っ ていくみたいのがめっちゃやすくなり ますなのでこれによってね複数にの分散型 の開発がねその後ねま当然オープンソース の番そも使われてきますしさオープン ソース以外のね商業分野とかそういった 分野でもこのギットがすごい使えて複数人 の開発がねすごいやりやすくなっていくえ そういった形になっていき ます同時にねあのプログラミング言語で 紹介したいのがルビーですねえルビーはね このマッツっていうま日本人の方がね開発 したますごい世界ジルを使われてる プログラミング言語にねますま日本が誇る プログラミング言語と言えるでしょうで このルビーま誕登場時代はね19誕生時代
(57:03) は1990年代なんですけどもえすごいね こうま高い柔軟性とねあとオブジェクト 試行がすごい評価特性が評価されててそう いう中で2000年代にルビオンレイル ズっていうのがねこうオープンソースでね 開発されていくんですねでこのルビオン レイルズってのがねめちゃくちゃねあの Webアプリケーションを作る時にWeb サービス作る時にすっごい強力だったん ですよもうなんかちょっとコマンド打った だけでサクっとウェブページが作れる みたいえこれだけのコードでこんな作業量 でこんな機能つけるのめっちゃすげえじゃ んって言ってま世界中のスタートアップと か企業がねウブアプリケーション作る時に ルビーオレイズをね使っていくわけですね でこのルビーとかルビーオンレイルズとか もこうオープンソースでね管理されてて 世界中の装備とかねもっとこんな機能あっ たらいいよねみたいな感じでいろんなね こうルビーオレで機能を追加したりとか
(57:54) ルビーオレズ前でにねこう色んな ライブラリーを追加したりとかしながら ウブアプリケーションの開発のでどんどん どんどん使えていくようになっていった はいこれがねLBルビーオンレイルズです ねでさらにねPythonもねこの時代に ねさらに普及していきますねPython はねあの2000年代の後半からデータ サイエンスが人口知能っていう分野がねす またね注目を集めていくんですけども pyonねすごいまあの読みやすいあの 書きやすかったのでえ究者としても非常に 使ってたのもあってそれでデータ サイエンスか人口知能分野の研究者の すごい使ったので彼らがねどんどん どんどんpyにねまいろんなライブラリー とかフレームワークを作っていくわけです ねでそれオープンソースとして公開して 使っていってみんなにそれ使い合っていく みたいなやっていたもうライブラリーア フレームワークはこの分野ねすごい充実し ていったまそんな感じでpyonがねえ
(58:45) どんどんどんどんさらにね普及を遂げて いくというわけでございます はいでそういったオープンソース分野なん ですけどまオープンソースね同時にねこの 時代にねライセンスもえられていきますま オプソースがどんどん使われていく中で ただね当時ね企業的にちょっとまだ安心し て使えなかったんですよねなんかまこの ライブラリーとかでツルことによってこう どれだけ自由に使っていいかの基準がこう バラバラ投じされてないとでそうなるとね ちょっとこううちの企業として使ったりと かしてく時はちょっと不安だな使いにくい んだなみたいなのがすごいあってそこでま 共通のライライセンスのフォーマットとし てGNPgplとかMITライセンスとか まそういった有名なものがいくつあるん ですけどそういう形でねライセンスがこう ドドンと出来上がっていくんですねでうち のこのライブラリーではねこのツールはま MITライセンス使ってますとかいうのを 明するようになっていくわけスと企業もね
(59:40) あこのライブラリーここまで使えてこう いう形で再配布までできるんだなとかいう のがねすごい取り入れやすくなったりとか さらにね自車でなんかこうオープンソース のツールを作っていってねえそれを公開 するみたいな時もこのライセンスあことで 基準をそう明確になったんでえ実際作って ね行くみたいなことにも使いやすくなって なんでま企業はね安心してねオープン ソースをね使ったり公開したりとか 取り組めるようになってねさらにオープン ソースがねえ普及していく企業側がね オープンソースのねいろんなツールを作っ ていくみたいのこの後の時代ねえ起こって いくえそういった基盤がここで整ってき ます はいというわけで2000年代はねま インターネットも普及する中でこう リナックスを筆頭にねオープンソースの 運動っていうのがね起きていくわけですね でこのオープンソースはねそうこういった リナックスができましたとかアパッチが できましたとかレイルズができましたとか えそういったのを超えたなんですかね文化
(1:00:36) なんですよねこうそういうま多もちろん そういったソースいろんな アプリケーションできたみたいなも 素晴しいですけどそのコミュニティの使わ ね協力し合うことによってこうね地域とか 言語とかの壁を超えてね世界中の知恵と スキルをこう結集してねソを作っていくっ ていうなんそういうカルチャーが作り上げ られたのがこの2000年代になります はいでそういったね繋がり合うで カルチャーができた2000年代から 2010年代に映っていきますね第8勝 ここの時代はねこれ皆さんもね記憶がねま 鮮明な方も多いと思うんですけどもま モバイルの革命とねクラウドの時代だった んですよねまあの2000年代後半からね 登場したねえスマホがねどんどんどんどん 及していきますとモバイルモバイル革命が 起こってきます同時にねこうクラウドサー ビスって言われるようなねこうクラウド上 でデータを保管したりとかねしていくよう なクラウドドっていうのはどんどん
(1:01:36) どんどん普及していくえそういったねえ 時代がこの2010年代でしたでこの モバイルの革命やクラウドドっていうのは じゃプログラミング言語にねどんな影響を ねまとかそでプログラミングがどんな役割 を果たしていくのでしょう かまずえ紹介したいのはですねスイフって いう言語になりますこれねあのApple のにいたクリスラットーナーっていうね人 が中心となってえ開発した言語になります でAppleね当時iPhoneとか作る のアプリとか作るのってままMacの アプリもそうですけどあの オブジェクティブCを使ってたんですよね でまオ当時は大変書き的だったんですけど まこの5時世となってはね2010年代の ご時世となってはねちょっとね色々といけ てないなっていうとこがたくさんあってま それでねえラトラたちはねまあのより シンプルで読みやすくそれでいて高い安全 性があってでこうインタラクティブ性も 高いようなアプリをねこう作れるような そんな言語を作りたいてことで作ったのが
(1:02:37) SwiftになりますでこのねSwift はねまオブジェクティブCに加えてね 新しいAppleのね公式な言語として なっていくわけですけどもそれによってね まこうSwiftの開発あスイフトじゃ ないやこれiPhoneのアプリとかの 開発はめっちゃねさらにやりやすくなって いくんですねより高性能で安全のインター の高いようなアプリの開発が位やりやすく なっていくそういった形でねiPhone のアプリの充実に大きく寄与していくのが このスフになりますじゃ同時にねま iPhone出たんで次Android Google側のAndroidどうだっ たかて言うとえ当時はまJAVで基本的に 開発が行れていたんですけども多くの場合 ねえそこでにおいてねまコトリンていう 言語がね登場しますまコトリはねあの ジェットプレイン車っていうところがねえ 作った言語なんですけどもこれ何かって 言うとますごいあのJAVと互換性をあり ながらJAVよりもより完結でそしてモダ
(1:03:33) な機能がありそしてそれでなんか高い安全 性も誇るっていう言語がこのこりになり ますでまAndroidのねこう作ってる ようなこうAndroidのコミュニティ エンジニアコミュニティがあってその コミュニティ側がすごい意見出てるんです よねもうちょっとジバだ作るのもちょっと 使えたみたいな運だえこりを我々は使って いきたいっていう声がすごいってそれでま GoogleがねえではねAndroid の公式語としてえコトリを採用しますって 言って宣言してえそれでねえコトリンがね Androidの公式言語になってその後 ねまJAVも引き続き使われてきますけど コトリンがねめちゃくちゃこう使われて いくような形になってきますそういった形 でねAndroid側のアプリ開発は すごいやりやすくなってさらに Androidのアプリ開発があのアプリ が充実していくえそういったとこになって いくわけですねこういった形でスイフトと かコトリンがねこのモバイル革命をさらに ねこう加速させていくわけなんですけども
(1:04:26) 同時にねこうクラウドもね起きていきます ねクラウドサービスもねすごい普及して いきますでこのクラウドサービスの時にね 活躍してきてるのがこの合言語っていう やつですねえこれはねGoogleのねま エンジニアがね作っていくわけなんです けどもまそとてもねえ公式のマスク キャラクター可愛いんですけどもねま合 原語はねコンセプトとしてねまいろんな コンセプトあるんですけどもまずは シンプルでそいながら高速な処理ができて そしてこう平行とかも得意なものていう ところでねえ5言語ね作られてますごい あの大規模なシステム開発にすごい向い てる言語なんですよ ねでまクラウドサービスでねこうサーバー バックエンドのとことかAPIとかを作っ ていくみたいな時にねで大規模システム 作っていく時てこの合言語の特性がすごい 生きてこうクラウドサービスのの後ろ側を 作っていくこのクラウサービス側を作って いく時にねこの言語ってのがめちゃくちゃ 使えていくクラウドサービスの基盤を支え
(1:05:27) ていっているようなのがこの語言語になっ ていきますはいでこのクラウドサービスの 分野で是非ちょっとね触れておきたいが マイクロサービスアーキテクチャーって いう考え方になりますこれはあのクラウド 環境会すごい普及していくんですけどもま こう今まではモノエシックな環境って言っ てなんだろうな1つのシステムをこう巨大 なえ1つのこうシステムとして作ってたん ですけどもそこからまどんどんどんどんの クラウドを普及してシステムを巨大化して いく中でま機能単位とかドメイン単位ごと 例えばなんだろうなこう会員登録機能とか でまあ例えばなんだろうなこう在庫管理 機能とかえそういったね会員管理機能在庫 管理機能みたいなもしくは検索機能とか そういって役割ことによってもうサービス を分けようとでそうれそいうことに サーバーも分けて小さなものサービスを1 それぞれ作ってその小さなサービスの 組み合わせによって1つの大きなサービス を提供するみたいなことをやっていこう みたいな考え方はマイクロサービス
(1:06:29) マイクロサービスアーキテクチャーってい んですけどもえそういったものが生まれて いきますはいまこれクラウド高本当にやり やすくなった形ですねでまそういうものが できていくんですけどもまそうしたが 小さい単位でそれぞれ管理したがね独立し てよりねえ管理がしやすいと大規模な システムをね1人のもみんな大人数で1つ もの返す大変なね分けることによって 少ない人数でそれぞれを特化したものを 返すお互いにを思ばさずにね作りやすく なりますよっていう概念ですはいでこの マイクロサビアアーキテクチャーとかの 普及する中でまそれぞれの各言語がなん ですかね特定のこのニーズにねそれぞれ この機能ごとに特化した形でその機能に あったこう言語ってのは選ばれながら作ら れて形になりますでそそういう中にねま5 言語とかpyonとかがね活躍しながら クラウドサービスをねどんどんどんどん 支えていくわけになってます はいというわけでこの2010年代なん
(1:07:25) ですけどもねこのモバイル革命を起こり クラウドの普及がね起きた時代において クリスだとながねえあのスイフト作ったり とかジェットブレンザはコトリ作ったりと かGoogは合言語作ったりとかしながね スフとねコトリがねこうモバイル革命の アプリどんどんどんどん作りやすくして 普及させてクラウドのところをね合言語が 支えてみたいな形になっていきますまなん でこう本当にこうプクロラ言語はね モバイルとクラウドをねえ支えてきたと 言ってもね本当に過言ではないそんな役割 はね果していくわけ ですでそしてついに2020年代え現代に 入っていきますねちょうど今なうですはい まこの時代はねま生成AI中心として やっぱしねAIそして機械学習まそうここ がね本当に時代の中心ではないかと思い ますそしてその後のこの未来にどう繋がっ ていくのかえここにおいてプログ言語が今 どうなってるのかえそんなお話をこっから していきます はいまずですねプログラミング言語として
(1:08:28) はですね大きいところの1つがジュリアっ ていう言語ありますこれまこうこの4人の プログラマーがね開発したものなんです けどま彼ら思ったわけですねまいろんな 言語こう出てきたけど科学質計算ところが ねまだまだとまpyonやRみたいな言語 あるけどえそういったのって結構実行速度 が遅いとまたこうすごい複雑なこう計算式 とか書こうとうとそれもちょっとね情調に なりやすいもっと科学技術計算に特化した 形我々緊急者が使いやすい形で え作ろうっていうことでねジュリアはね 科学技術計算とか数値計算に特化した研究 者向けの言語としてできてまC言語並みの ねこうパフォーマンスさ強力さがあり ながらまジャストインタイムの コンパイラー形式ってのをねえ作っててま 非常にね高速にね実行ができてです ねスムーズに開発ができるみたいなえ言語 と登場したのがこのジュリアになります これでねあのこのAIの時代がどんどん 復習していく中で複雑なAIモデルをま
(1:09:32) このね単時間で開発していくところに非常 に役に立って貢献したのはジュリアって いう言語 です同時に先ほど登場した合言語ねえこれ もねこのaijめちゃくちゃ活躍してます このねまシンプルで高速平行書が得意 みたいな特性から大規模システム開発に すごい向いていてでまAIってねすごい システムの規模が大規模たくさんデータ めちゃくちゃ大規模になりやすいんですよ ねそういう中中でこう大規模なシステムに おいてま信頼性高くでもこうデータ量が 増えることにこうどんどんスケーラビリ ティって言んですけどどんどんデータが 増えるとことにねこうそれに対応していく 形を取る必要があるんですけどもその対応 性もねスケーラビリティもしい高いって いうところね合言語がこのAI開発支えて たりもしますさらにやっぱしねこうまAI って言ったらPythonですよねえ機械 学習の分野ではねPythonがね的大 活躍中ですねまシプルが公文でありつつ このライブラリーがなんと言ってもね豊富
(1:10:28) なんてオープンソースの力でねめっちゃ この機械学習分野でAI分野の ライブラリーが豊富にあるんで引き続き パイソンもここの下座をしてえい るっていう形になってますはいまAはこう いった言語たちに支えながらねどんどん どんどん開発が進んでましてで同時にね えっとねこの未来みたいなところでいくと 今ね開進んでるのがQ#っていうまこれ Microsoftが出した出してる言語 なんですけども あの量子コンピューターってあるじゃない ですかでこの量子コンピューターの計算さ れるのがこのQシープなんです ね量子コンピューターもうなんかで作ろう と思っても量子コンピューターの計算って こうアルゴリズムがもうそもそも違うとな 10大のプログラミング言語だと量子 コンピューターの計算うまくできないよと それえば量子演算がねちゃんとできるよう なそれに特化したプログラム言語を作ろ うってことでえQ#が生まれたわけですね でこのQシープのおかげでねえ量子 コンピューティング量子コンピューターの ねこの演算がすごいやりやすくなって量子
(1:11:30) コンピューティングの発展をねえ支えて くれていますはいそんな形でねこの 2020年代まAIが対当しなが量子 コンピューターみたいなもえついに生まれ てきているえそんなね時代になりますはい これでねついにねえ古代からね現代まで 全部見てきました古代アバカスの時代から ね計算自動が起こりま1940年代戦争 さ中汎用的な電子計算機エアとかが生まれ てねそしてそっからね香水準言語 コンパイラーが生えてフォートランが生え てきました1960年代になるとねこのね フォートランがねあ高水準言がどんどん 発展して男に発展していきますコボルが 甘えたいアルゴルが甘いたいですかね リスプが甘えたいで1970年代だと システムプログラミングていうとこが開い ててUNを基盤にしてねC言語があったし オブジェクト思考がえてきましたねでこ そっからね1980年代になるとねパーザ コンピューターが普及してそこの アプリケーションを開発を支える形でねえ
(1:12:35) C言語にねオブジェクトシを取り入れたC プラプラとかオブジェクトCがえ誕生し 1990年代ついにインターネットの誕生 てスクリプト言語まあのまjavjavが で前かねJAVスクリプト言語じゃない けどねJava生えたりえ JavaScriptPHPPython そういったものが生えていきます そして2000年代になるとねオープン ソースの力ねリナックスギとアパッチとか でそしてねえ引きねpyonライブラリー がオープンソースの近って充実さらに ルビーのところもねルビーオンレズができ てね多くのソフトウェアウェブを作る ところで使われていきます2010年代に なるとねモバイル革命とねクラウドのとこ が起きてきましたねスイフトやコトリン さらに合言語っていうところが活躍してこ 2020年代なってくるとAiの時代って いうところでねえ パイソンとかねジュリアえ5言語そして さらに未来はね量子コンピューターって ことでQシープという形でねまこの言語 っていうのはねこの各時代のニースのね
(1:13:36) 技術確信に応じてねま生まれてきたわけ ですよはいですごくねまこれやりながら 思ったのがねプログラミング言語ってね 単なるこうツールじゃないんですよね技術 確信をねこう支えてきた基盤なんですよ 技術確信が起こりそして新たなプロ言語が 生まれそれによってねその技術隠者さに 進んでいくというね本当にものなんですね できっとね今までもねプロガ言語そういっ てね非常に多様化してきましたし普及して きましたしきっと未来のプロ言語はね さらに多様化してさらにそれぞれ用途に 特化したものにねなっていくんだと思い ますで最後にねえちょっとね今回ねあの 今回登場した人物の中からねすごい僕は 好きな言葉をね出したいなと紹介したいな と思いますこれグレースホッパーあの コンパイラー作ったねえ海軍の少女の女性 の方ですね彼女ま小の母でもありますけど も彼女が言ってる言葉の中へねえ言て こんな言葉があります言葉の中で最も危険 なフレーズそれは私たちはいつもこのやり 方でやってきたですですはいプログラム
(1:14:46) 言語ね新しいものを作って時代を切り開い てきましたでもね人はねそういった時代を 切り開く一方でやっぱし変化が嫌いな ところもどうしてもあります でこの変化を嫌ってねまいつもこのやり方 でやってきたって言ってしまいがち です今までこうだったからこうそれは違う とですこうはやりません言ったことない です かこういった言葉ではでもこれはね時代の 進歩を止める言葉でもあるんですよね最も 危険な言葉です私たちはね今 プログラミングにかかっていてこの プログラミングてのは時代を切り開いてき たわけですで我々これかかってる新しい 時代を作っていくのは我々なんです僕たち なんですや今までこのやってきたとかね そういう言葉はね捨てて一緒にこの時代を ね新しい時代を未来を作っていきましょう それではまたお会いしましょうまたね